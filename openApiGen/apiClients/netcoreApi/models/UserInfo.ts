/* tslint:disable */
/* eslint-disable */
/**
 * My Title
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    UserRoleInfo,
    UserRoleInfoFromJSON,
    UserRoleInfoFromJSONTyped,
    UserRoleInfoToJSON,
} from './UserRoleInfo';

/**
 * 
 * @export
 * @interface UserInfo
 */
export interface UserInfo {
    /**
     * 
     * @type {number}
     * @memberof UserInfo
     */
    domainRootId: number;
    /**
     * 
     * @type {boolean}
     * @memberof UserInfo
     */
    emailConfirmed: boolean;
    /**
     * 
     * @type {string}
     * @memberof UserInfo
     */
    userId?: string;
    /**
     * 
     * @type {string}
     * @memberof UserInfo
     */
    givenName?: string;
    /**
     * 
     * @type {string}
     * @memberof UserInfo
     */
    surname?: string;
    /**
     * 
     * @type {string}
     * @memberof UserInfo
     */
    displayName?: string;
    /**
     * 
     * @type {string}
     * @memberof UserInfo
     */
    gender?: string;
    /**
     * 
     * @type {string}
     * @memberof UserInfo
     */
    accessToken?: string;
    /**
     * 
     * @type {string}
     * @memberof UserInfo
     */
    email?: string;
    /**
     * 
     * @type {string}
     * @memberof UserInfo
     */
    phone?: string;
    /**
     * 
     * @type {Date}
     * @memberof UserInfo
     */
    createDate: Date;
    /**
     * 
     * @type {Array<UserRoleInfo>}
     * @memberof UserInfo
     */
    roles?: Array<UserRoleInfo>;
}

export function UserInfoFromJSON(json: any): UserInfo {
    return UserInfoFromJSONTyped(json, false);
}

export function UserInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserInfo {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'domainRootId': json['domainRootId'],
        'emailConfirmed': json['emailConfirmed'],
        'userId': !exists(json, 'userId') ? undefined : json['userId'],
        'givenName': !exists(json, 'givenName') ? undefined : json['givenName'],
        'surname': !exists(json, 'surname') ? undefined : json['surname'],
        'displayName': !exists(json, 'displayName') ? undefined : json['displayName'],
        'gender': !exists(json, 'gender') ? undefined : json['gender'],
        'accessToken': !exists(json, 'accessToken') ? undefined : json['accessToken'],
        'email': !exists(json, 'email') ? undefined : json['email'],
        'phone': !exists(json, 'phone') ? undefined : json['phone'],
        'createDate': (new Date(json['createDate'])),
        'roles': !exists(json, 'roles') ? undefined : ((json['roles'] as Array<any>).map(UserRoleInfoFromJSON)),
    };
}

export function UserInfoToJSON(value?: UserInfo | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'domainRootId': value.domainRootId,
        'emailConfirmed': value.emailConfirmed,
        'userId': value.userId,
        'givenName': value.givenName,
        'surname': value.surname,
        'displayName': value.displayName,
        'gender': value.gender,
        'accessToken': value.accessToken,
        'email': value.email,
        'phone': value.phone,
        'createDate': (value.createDate.toISOString()),
        'roles': value.roles === undefined ? undefined : ((value.roles as Array<any>).map(UserRoleInfoToJSON)),
    };
}

