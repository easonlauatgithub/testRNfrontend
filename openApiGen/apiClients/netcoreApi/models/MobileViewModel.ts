/* tslint:disable */
/* eslint-disable */
/**
 * My Title
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    PostRecord,
    PostRecordFromJSON,
    PostRecordFromJSONTyped,
    PostRecordToJSON,
} from './PostRecord';

/**
 * 
 * @export
 * @interface MobileViewModel
 */
export interface MobileViewModel {
    /**
     * 
     * @type {string}
     * @memberof MobileViewModel
     */
    title?: string;
    /**
     * 
     * @type {string}
     * @memberof MobileViewModel
     */
    msg?: string;
    /**
     * 
     * @type {Array<PostRecord>}
     * @memberof MobileViewModel
     */
    items?: Array<PostRecord>;
}

export function MobileViewModelFromJSON(json: any): MobileViewModel {
    console.log("easontesting - MobileViewModel.ts MobileViewModelFromJSON");
    return MobileViewModelFromJSONTyped(json, false);
}

export function MobileViewModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): MobileViewModel {
    console.log("easontesting - MobileViewModel.ts MobileViewModelFromJSONTyped");
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'title': !exists(json, 'title') ? undefined : json['title'],
        'msg': !exists(json, 'msg') ? undefined : json['msg'],
        'items': !exists(json, 'items') ? undefined : ((json['items'] as Array<any>).map(PostRecordFromJSON)),
    };
}

export function MobileViewModelToJSON(value?: MobileViewModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'title': value.title,
        'msg': value.msg,
        'items': value.items === undefined ? undefined : ((value.items as Array<any>).map(PostRecordToJSON)),
    };
}

