/* tslint:disable */
/* eslint-disable */
/**
 * My Title
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    CartItemDetail,
    CartItemDetailFromJSON,
    CartItemDetailFromJSONTyped,
    CartItemDetailToJSON,
} from './CartItemDetail';
import {
    CartRecord,
    CartRecordFromJSON,
    CartRecordFromJSONTyped,
    CartRecordToJSON,
} from './CartRecord';
import {
    CatLabelGroup,
    CatLabelGroupFromJSON,
    CatLabelGroupFromJSONTyped,
    CatLabelGroupToJSON,
} from './CatLabelGroup';
import {
    Contact,
    ContactFromJSON,
    ContactFromJSONTyped,
    ContactToJSON,
} from './Contact';
import {
    Payment,
    PaymentFromJSON,
    PaymentFromJSONTyped,
    PaymentToJSON,
} from './Payment';
import {
    ShopInfo,
    ShopInfoFromJSON,
    ShopInfoFromJSONTyped,
    ShopInfoToJSON,
} from './ShopInfo';

/**
 * 
 * @export
 * @interface OrderDetail
 */
export interface OrderDetail {
    /**
     * 
     * @type {ShopInfo}
     * @memberof OrderDetail
     */
    shop?: ShopInfo;
    /**
     * 
     * @type {Array<Payment>}
     * @memberof OrderDetail
     */
    payments?: Array<Payment>;
    /**
     * 
     * @type {Array<CartItemDetail>}
     * @memberof OrderDetail
     */
    items?: Array<CartItemDetail>;
    /**
     * 
     * @type {Array<CatLabelGroup>}
     * @memberof OrderDetail
     */
    orderExtras?: Array<CatLabelGroup>;
    /**
     * 
     * @type {Contact}
     * @memberof OrderDetail
     */
    contact?: Contact;
    /**
     * 
     * @type {number}
     * @memberof OrderDetail
     */
    orderTotal: number;
    /**
     * 
     * @type {string}
     * @memberof OrderDetail
     */
    shopMsg?: string;
    /**
     * 
     * @type {string}
     * @memberof OrderDetail
     */
    userId?: string;
    /**
     * 
     * @type {string}
     * @memberof OrderDetail
     */
    shopUserId?: string;
    /**
     * 
     * @type {Date}
     * @memberof OrderDetail
     */
    createUtc: Date;
    /**
     * 
     * @type {number}
     * @memberof OrderDetail
     */
    id: number;
    /**
     * 
     * @type {number}
     * @memberof OrderDetail
     */
    contactId: number;
    /**
     * 
     * @type {string}
     * @memberof OrderDetail
     */
    userMsg?: string;
    /**
     * 
     * @type {number}
     * @memberof OrderDetail
     */
    stateCode: number;
    /**
     * 
     * @type {number}
     * @memberof OrderDetail
     */
    orderType: number;
    /**
     * 
     * @type {string}
     * @memberof OrderDetail
     */
    stateText?: string;
    /**
     * 
     * @type {Date}
     * @memberof OrderDetail
     */
    localCreateDate: Date;
    /**
     * 
     * @type {Array<CartRecord>}
     * @memberof OrderDetail
     */
    cartRecords?: Array<CartRecord>;
}

export function OrderDetailFromJSON(json: any): OrderDetail {
    return OrderDetailFromJSONTyped(json, false);
}

export function OrderDetailFromJSONTyped(json: any, ignoreDiscriminator: boolean): OrderDetail {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'shop': !exists(json, 'shop') ? undefined : ShopInfoFromJSON(json['shop']),
        'payments': !exists(json, 'payments') ? undefined : ((json['payments'] as Array<any>).map(PaymentFromJSON)),
        'items': !exists(json, 'items') ? undefined : ((json['items'] as Array<any>).map(CartItemDetailFromJSON)),
        'orderExtras': !exists(json, 'orderExtras') ? undefined : ((json['orderExtras'] as Array<any>).map(CatLabelGroupFromJSON)),
        'contact': !exists(json, 'contact') ? undefined : ContactFromJSON(json['contact']),
        'orderTotal': json['orderTotal'],
        'shopMsg': !exists(json, 'shopMsg') ? undefined : json['shopMsg'],
        'userId': !exists(json, 'userId') ? undefined : json['userId'],
        'shopUserId': !exists(json, 'shopUserId') ? undefined : json['shopUserId'],
        'createUtc': (new Date(json['createUtc'])),
        'id': json['id'],
        'contactId': json['contactId'],
        'userMsg': !exists(json, 'userMsg') ? undefined : json['userMsg'],
        'stateCode': json['stateCode'],
        'orderType': json['orderType'],
        'stateText': !exists(json, 'stateText') ? undefined : json['stateText'],
        'localCreateDate': (new Date(json['localCreateDate'])),
        'cartRecords': !exists(json, 'cartRecords') ? undefined : ((json['cartRecords'] as Array<any>).map(CartRecordFromJSON)),
    };
}

export function OrderDetailToJSON(value?: OrderDetail | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'shop': ShopInfoToJSON(value.shop),
        'payments': value.payments === undefined ? undefined : ((value.payments as Array<any>).map(PaymentToJSON)),
        'items': value.items === undefined ? undefined : ((value.items as Array<any>).map(CartItemDetailToJSON)),
        'orderExtras': value.orderExtras === undefined ? undefined : ((value.orderExtras as Array<any>).map(CatLabelGroupToJSON)),
        'contact': ContactToJSON(value.contact),
        'orderTotal': value.orderTotal,
        'shopMsg': value.shopMsg,
        'userId': value.userId,
        'shopUserId': value.shopUserId,
        'createUtc': (value.createUtc.toISOString()),
        'id': value.id,
        'contactId': value.contactId,
        'userMsg': value.userMsg,
        'stateCode': value.stateCode,
        'orderType': value.orderType,
        'stateText': value.stateText,
        'localCreateDate': (value.localCreateDate.toISOString()),
        'cartRecords': value.cartRecords === undefined ? undefined : ((value.cartRecords as Array<any>).map(CartRecordToJSON)),
    };
}

