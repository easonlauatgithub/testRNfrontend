/* tslint:disable */
/* eslint-disable */
/**
 * My Title
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    CatGroupedLabels,
    CatGroupedLabelsFromJSON,
    CatGroupedLabelsFromJSONTyped,
    CatGroupedLabelsToJSON,
} from './CatGroupedLabels';
import {
    CategoryPair,
    CategoryPairFromJSON,
    CategoryPairFromJSONTyped,
    CategoryPairToJSON,
} from './CategoryPair';
import {
    ImgInfo,
    ImgInfoFromJSON,
    ImgInfoFromJSONTyped,
    ImgInfoToJSON,
} from './ImgInfo';
import {
    Lang,
    LangFromJSON,
    LangFromJSONTyped,
    LangToJSON,
} from './Lang';
import {
    UiTheme,
    UiThemeFromJSON,
    UiThemeFromJSONTyped,
    UiThemeToJSON,
} from './UiTheme';

/**
 * 
 * @export
 * @interface ShopInfo
 */
export interface ShopInfo {
    /**
     * 
     * @type {Array<CategoryPair>}
     * @memberof ShopInfo
     */
    tags?: Array<CategoryPair>;
    /**
     * 
     * @type {CategoryPair}
     * @memberof ShopInfo
     */
    mainCat?: CategoryPair;
    /**
     * 
     * @type {ShopInfo}
     * @memberof ShopInfo
     */
    agentInfo?: ShopInfo;
    /**
     * 
     * @type {Lang}
     * @memberof ShopInfo
     */
    lang: Lang;
    /**
     * 
     * @type {string}
     * @memberof ShopInfo
     */
    logoPath?: string;
    /**
     * 
     * @type {boolean}
     * @memberof ShopInfo
     */
    isCartAllowed: boolean;
    /**
     * 
     * @type {Array<ImgInfo>}
     * @memberof ShopInfo
     */
    images?: Array<ImgInfo>;
    /**
     * 
     * @type {Array<CatGroupedLabels>}
     * @memberof ShopInfo
     */
    infoLabels?: Array<CatGroupedLabels>;
    /**
     * 
     * @type {UiTheme}
     * @memberof ShopInfo
     */
    ui?: UiTheme;
    /**
     * 
     * @type {string}
     * @memberof ShopInfo
     */
    itemSpaPath?: string;
    /**
     * 
     * @type {number}
     * @memberof ShopInfo
     */
    shopId: number;
    /**
     * 
     * @type {number}
     * @memberof ShopInfo
     */
    stateCode: number;
    /**
     * 
     * @type {string}
     * @memberof ShopInfo
     */
    shopUserId?: string;
    /**
     * 
     * @type {string}
     * @memberof ShopInfo
     */
    shopName?: string;
    /**
     * 
     * @type {number}
     * @memberof ShopInfo
     */
    catId: number;
    /**
     * 
     * @type {number}
     * @memberof ShopInfo
     */
    viewCatId: number;
    /**
     * 
     * @type {string}
     * @memberof ShopInfo
     */
    intro?: string;
    /**
     * 
     * @type {string}
     * @memberof ShopInfo
     */
    shopCode?: string;
    /**
     * 
     * @type {string}
     * @memberof ShopInfo
     */
    domainName?: string;
    /**
     * 
     * @type {number}
     * @memberof ShopInfo
     */
    repShopId: number;
    /**
     * 
     * @type {string}
     * @memberof ShopInfo
     */
    uiTheme?: string;
    /**
     * 
     * @type {string}
     * @memberof ShopInfo
     */
    uiBody?: string;
    /**
     * 
     * @type {string}
     * @memberof ShopInfo
     */
    uiListing?: string;
    /**
     * 
     * @type {string}
     * @memberof ShopInfo
     */
    uiLogo?: string;
    /**
     * 
     * @type {boolean}
     * @memberof ShopInfo
     */
    pickupEnabled: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ShopInfo
     */
    ownPickupEnabled: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ShopInfo
     */
    tagFilterable: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ShopInfo
     */
    payCashEnabled: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ShopInfo
     */
    payFpsEnabled: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ShopInfo
     */
    payAtmEnabled: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ShopInfo
     */
    payPalEnabled: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ShopInfo
     */
    payMeEnabled: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ShopInfo
     */
    payAliEnabled: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ShopInfo
     */
    payWechatEnabled: boolean;
}

export function ShopInfoFromJSON(json: any): ShopInfo {
    return ShopInfoFromJSONTyped(json, false);
}

export function ShopInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ShopInfo {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'tags': !exists(json, 'tags') ? undefined : ((json['tags'] as Array<any>).map(CategoryPairFromJSON)),
        'mainCat': !exists(json, 'mainCat') ? undefined : CategoryPairFromJSON(json['mainCat']),
        'agentInfo': !exists(json, 'agentInfo') ? undefined : ShopInfoFromJSON(json['agentInfo']),
        'lang': LangFromJSON(json['lang']),
        'logoPath': !exists(json, 'logoPath') ? undefined : json['logoPath'],
        'isCartAllowed': json['isCartAllowed'],
        'images': !exists(json, 'images') ? undefined : ((json['images'] as Array<any>).map(ImgInfoFromJSON)),
        'infoLabels': !exists(json, 'infoLabels') ? undefined : ((json['infoLabels'] as Array<any>).map(CatGroupedLabelsFromJSON)),
        'ui': !exists(json, 'ui') ? undefined : UiThemeFromJSON(json['ui']),
        'itemSpaPath': !exists(json, 'itemSpaPath') ? undefined : json['itemSpaPath'],
        'shopId': json['shopId'],
        'stateCode': json['stateCode'],
        'shopUserId': !exists(json, 'shopUserId') ? undefined : json['shopUserId'],
        'shopName': !exists(json, 'shopName') ? undefined : json['shopName'],
        'catId': json['catId'],
        'viewCatId': json['viewCatId'],
        'intro': !exists(json, 'intro') ? undefined : json['intro'],
        'shopCode': !exists(json, 'shopCode') ? undefined : json['shopCode'],
        'domainName': !exists(json, 'domainName') ? undefined : json['domainName'],
        'repShopId': json['repShopId'],
        'uiTheme': !exists(json, 'uiTheme') ? undefined : json['uiTheme'],
        'uiBody': !exists(json, 'uiBody') ? undefined : json['uiBody'],
        'uiListing': !exists(json, 'uiListing') ? undefined : json['uiListing'],
        'uiLogo': !exists(json, 'uiLogo') ? undefined : json['uiLogo'],
        'pickupEnabled': json['pickupEnabled'],
        'ownPickupEnabled': json['ownPickupEnabled'],
        'tagFilterable': json['tagFilterable'],
        'payCashEnabled': json['payCashEnabled'],
        'payFpsEnabled': json['payFpsEnabled'],
        'payAtmEnabled': json['payAtmEnabled'],
        'payPalEnabled': json['payPalEnabled'],
        'payMeEnabled': json['payMeEnabled'],
        'payAliEnabled': json['payAliEnabled'],
        'payWechatEnabled': json['payWechatEnabled'],
    };
}

export function ShopInfoToJSON(value?: ShopInfo | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'tags': value.tags === undefined ? undefined : ((value.tags as Array<any>).map(CategoryPairToJSON)),
        'mainCat': CategoryPairToJSON(value.mainCat),
        'agentInfo': ShopInfoToJSON(value.agentInfo),
        'lang': LangToJSON(value.lang),
        'logoPath': value.logoPath,
        'isCartAllowed': value.isCartAllowed,
        'images': value.images === undefined ? undefined : ((value.images as Array<any>).map(ImgInfoToJSON)),
        'infoLabels': value.infoLabels === undefined ? undefined : ((value.infoLabels as Array<any>).map(CatGroupedLabelsToJSON)),
        'ui': UiThemeToJSON(value.ui),
        'itemSpaPath': value.itemSpaPath,
        'shopId': value.shopId,
        'stateCode': value.stateCode,
        'shopUserId': value.shopUserId,
        'shopName': value.shopName,
        'catId': value.catId,
        'viewCatId': value.viewCatId,
        'intro': value.intro,
        'shopCode': value.shopCode,
        'domainName': value.domainName,
        'repShopId': value.repShopId,
        'uiTheme': value.uiTheme,
        'uiBody': value.uiBody,
        'uiListing': value.uiListing,
        'uiLogo': value.uiLogo,
        'pickupEnabled': value.pickupEnabled,
        'ownPickupEnabled': value.ownPickupEnabled,
        'tagFilterable': value.tagFilterable,
        'payCashEnabled': value.payCashEnabled,
        'payFpsEnabled': value.payFpsEnabled,
        'payAtmEnabled': value.payAtmEnabled,
        'payPalEnabled': value.payPalEnabled,
        'payMeEnabled': value.payMeEnabled,
        'payAliEnabled': value.payAliEnabled,
        'payWechatEnabled': value.payWechatEnabled,
    };
}

