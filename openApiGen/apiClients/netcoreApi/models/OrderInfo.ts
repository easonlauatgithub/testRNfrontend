/* tslint:disable */
/* eslint-disable */
/**
 * My Title
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    CartRecord,
    CartRecordFromJSON,
    CartRecordFromJSONTyped,
    CartRecordToJSON,
} from './CartRecord';

/**
 * 
 * @export
 * @interface OrderInfo
 */
export interface OrderInfo {
    /**
     * 
     * @type {string}
     * @memberof OrderInfo
     */
    shopMsg?: string;
    /**
     * 
     * @type {string}
     * @memberof OrderInfo
     */
    userId?: string;
    /**
     * 
     * @type {string}
     * @memberof OrderInfo
     */
    shopUserId?: string;
    /**
     * 
     * @type {Date}
     * @memberof OrderInfo
     */
    createUtc: Date;
    /**
     * 
     * @type {number}
     * @memberof OrderInfo
     */
    id: number;
    /**
     * 
     * @type {number}
     * @memberof OrderInfo
     */
    contactId: number;
    /**
     * 
     * @type {string}
     * @memberof OrderInfo
     */
    userMsg?: string;
    /**
     * 
     * @type {number}
     * @memberof OrderInfo
     */
    stateCode: number;
    /**
     * 
     * @type {number}
     * @memberof OrderInfo
     */
    orderType: number;
    /**
     * 
     * @type {string}
     * @memberof OrderInfo
     */
    stateText?: string;
    /**
     * 
     * @type {Date}
     * @memberof OrderInfo
     */
    localCreateDate: Date;
    /**
     * 
     * @type {Array<CartRecord>}
     * @memberof OrderInfo
     */
    cartRecords?: Array<CartRecord>;
}

export function OrderInfoFromJSON(json: any): OrderInfo {
    return OrderInfoFromJSONTyped(json, false);
}

export function OrderInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): OrderInfo {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'shopMsg': !exists(json, 'shopMsg') ? undefined : json['shopMsg'],
        'userId': !exists(json, 'userId') ? undefined : json['userId'],
        'shopUserId': !exists(json, 'shopUserId') ? undefined : json['shopUserId'],
        'createUtc': (new Date(json['createUtc'])),
        'id': json['id'],
        'contactId': json['contactId'],
        'userMsg': !exists(json, 'userMsg') ? undefined : json['userMsg'],
        'stateCode': json['stateCode'],
        'orderType': json['orderType'],
        'stateText': !exists(json, 'stateText') ? undefined : json['stateText'],
        'localCreateDate': (new Date(json['localCreateDate'])),
        'cartRecords': !exists(json, 'cartRecords') ? undefined : ((json['cartRecords'] as Array<any>).map(CartRecordFromJSON)),
    };
}

export function OrderInfoToJSON(value?: OrderInfo | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'shopMsg': value.shopMsg,
        'userId': value.userId,
        'shopUserId': value.shopUserId,
        'createUtc': (value.createUtc.toISOString()),
        'id': value.id,
        'contactId': value.contactId,
        'userMsg': value.userMsg,
        'stateCode': value.stateCode,
        'orderType': value.orderType,
        'stateText': value.stateText,
        'localCreateDate': (value.localCreateDate.toISOString()),
        'cartRecords': value.cartRecords === undefined ? undefined : ((value.cartRecords as Array<any>).map(CartRecordToJSON)),
    };
}

