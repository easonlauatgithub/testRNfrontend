/* tslint:disable */
/* eslint-disable */
/**
 * My Title
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface FileRecord
 */
export interface FileRecord {
    /**
     * 
     * @type {number}
     * @memberof FileRecord
     */
    postFileId: number;
    /**
     * 
     * @type {string}
     * @memberof FileRecord
     */
    postId?: string;
    /**
     * 
     * @type {number}
     * @memberof FileRecord
     */
    fileID: number;
    /**
     * 
     * @type {string}
     * @memberof FileRecord
     */
    userId?: string;
    /**
     * 
     * @type {string}
     * @memberof FileRecord
     */
    fileType?: string;
    /**
     * 
     * @type {string}
     * @memberof FileRecord
     */
    fileName?: string;
    /**
     * 
     * @type {number}
     * @memberof FileRecord
     */
    fileSize: number;
    /**
     * 
     * @type {string}
     * @memberof FileRecord
     */
    category?: string;
    /**
     * 
     * @type {string}
     * @memberof FileRecord
     */
    fileMsg?: string;
    /**
     * 
     * @type {Date}
     * @memberof FileRecord
     */
    recordDateUtc?: Date;
    /**
     * 
     * @type {string}
     * @memberof FileRecord
     */
    path?: string;
    /**
     * 
     * @type {string}
     * @memberof FileRecord
     */
    thumbPath?: string;
    /**
     * 
     * @type {string}
     * @memberof FileRecord
     */
    textContent?: string;
    /**
     * 
     * @type {number}
     * @memberof FileRecord
     */
    stateCode: number;
    /**
     * 
     * @type {number}
     * @memberof FileRecord
     */
    seq: number;
}

export function FileRecordFromJSON(json: any): FileRecord {
    return FileRecordFromJSONTyped(json, false);
}

export function FileRecordFromJSONTyped(json: any, ignoreDiscriminator: boolean): FileRecord {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'postFileId': json['postFileId'],
        'postId': !exists(json, 'postId') ? undefined : json['postId'],
        'fileID': json['fileID'],
        'userId': !exists(json, 'userId') ? undefined : json['userId'],
        'fileType': !exists(json, 'fileType') ? undefined : json['fileType'],
        'fileName': !exists(json, 'fileName') ? undefined : json['fileName'],
        'fileSize': json['fileSize'],
        'category': !exists(json, 'category') ? undefined : json['category'],
        'fileMsg': !exists(json, 'fileMsg') ? undefined : json['fileMsg'],
        'recordDateUtc': !exists(json, 'recordDateUtc') ? undefined : (new Date(json['recordDateUtc'])),
        'path': !exists(json, 'path') ? undefined : json['path'],
        'thumbPath': !exists(json, 'thumbPath') ? undefined : json['thumbPath'],
        'textContent': !exists(json, 'textContent') ? undefined : json['textContent'],
        'stateCode': json['stateCode'],
        'seq': json['seq'],
    };
}

export function FileRecordToJSON(value?: FileRecord | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'postFileId': value.postFileId,
        'postId': value.postId,
        'fileID': value.fileID,
        'userId': value.userId,
        'fileType': value.fileType,
        'fileName': value.fileName,
        'fileSize': value.fileSize,
        'category': value.category,
        'fileMsg': value.fileMsg,
        'recordDateUtc': value.recordDateUtc === undefined ? undefined : (value.recordDateUtc.toISOString()),
        'path': value.path,
        'thumbPath': value.thumbPath,
        'textContent': value.textContent,
        'stateCode': value.stateCode,
        'seq': value.seq,
    };
}

