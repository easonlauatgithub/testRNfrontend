/* tslint:disable */
/* eslint-disable */
/**
 * My Title
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    CatGroup,
    CatGroupFromJSON,
    CatGroupFromJSONTyped,
    CatGroupToJSON,
} from './CatGroup';
import {
    Filterer,
    FiltererFromJSON,
    FiltererFromJSONTyped,
    FiltererToJSON,
} from './Filterer';
import {
    PageMetas,
    PageMetasFromJSON,
    PageMetasFromJSONTyped,
    PageMetasToJSON,
} from './PageMetas';
import {
    PaymentAccount,
    PaymentAccountFromJSON,
    PaymentAccountFromJSONTyped,
    PaymentAccountToJSON,
} from './PaymentAccount';
import {
    PostRecord,
    PostRecordFromJSON,
    PostRecordFromJSONTyped,
    PostRecordToJSON,
} from './PostRecord';
import {
    ShopInfo,
    ShopInfoFromJSON,
    ShopInfoFromJSONTyped,
    ShopInfoToJSON,
} from './ShopInfo';

/**
 * 
 * @export
 * @interface ShopsViewModel
 */
export interface ShopsViewModel {
    /**
     * 
     * @type {boolean}
     * @memberof ShopsViewModel
     */
    isShopFilterOnly: boolean;
    /**
     * 
     * @type {Filterer}
     * @memberof ShopsViewModel
     */
    filter?: Filterer;
    /**
     * 
     * @type {Array<PostRecord>}
     * @memberof ShopsViewModel
     */
    posts?: Array<PostRecord>;
    /**
     * 
     * @type {PageMetas}
     * @memberof ShopsViewModel
     */
    pgMetas?: PageMetas;
    /**
     * 
     * @type {ShopInfo}
     * @memberof ShopsViewModel
     */
    shop?: ShopInfo;
    /**
     * 
     * @type {string}
     * @memberof ShopsViewModel
     */
    pageName?: string;
    /**
     * 
     * @type {Array<CatGroup>}
     * @memberof ShopsViewModel
     */
    listingCatGroups?: Array<CatGroup>;
    /**
     * 
     * @type {Array<CatGroup>}
     * @memberof ShopsViewModel
     */
    itemTagCatGroups?: Array<CatGroup>;
    /**
     * 
     * @type {string}
     * @memberof ShopsViewModel
     */
    currency?: string;
    /**
     * 
     * @type {Array<PaymentAccount>}
     * @memberof ShopsViewModel
     */
    payAccounts?: Array<PaymentAccount>;
}

export function ShopsViewModelFromJSON(json: any): ShopsViewModel {
    return ShopsViewModelFromJSONTyped(json, false);
}

export function ShopsViewModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): ShopsViewModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'isShopFilterOnly': json['isShopFilterOnly'],
        'filter': !exists(json, 'filter') ? undefined : FiltererFromJSON(json['filter']),
        'posts': !exists(json, 'posts') ? undefined : ((json['posts'] as Array<any>).map(PostRecordFromJSON)),
        'pgMetas': !exists(json, 'pgMetas') ? undefined : PageMetasFromJSON(json['pgMetas']),
        'shop': !exists(json, 'shop') ? undefined : ShopInfoFromJSON(json['shop']),
        'pageName': !exists(json, 'pageName') ? undefined : json['pageName'],
        'listingCatGroups': !exists(json, 'listingCatGroups') ? undefined : ((json['listingCatGroups'] as Array<any>).map(CatGroupFromJSON)),
        'itemTagCatGroups': !exists(json, 'itemTagCatGroups') ? undefined : ((json['itemTagCatGroups'] as Array<any>).map(CatGroupFromJSON)),
        'currency': !exists(json, 'currency') ? undefined : json['currency'],
        'payAccounts': !exists(json, 'payAccounts') ? undefined : ((json['payAccounts'] as Array<any>).map(PaymentAccountFromJSON)),
    };
}

export function ShopsViewModelToJSON(value?: ShopsViewModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'isShopFilterOnly': value.isShopFilterOnly,
        'filter': FiltererToJSON(value.filter),
        'posts': value.posts === undefined ? undefined : ((value.posts as Array<any>).map(PostRecordToJSON)),
        'pgMetas': PageMetasToJSON(value.pgMetas),
        'shop': ShopInfoToJSON(value.shop),
        'pageName': value.pageName,
        'listingCatGroups': value.listingCatGroups === undefined ? undefined : ((value.listingCatGroups as Array<any>).map(CatGroupToJSON)),
        'itemTagCatGroups': value.itemTagCatGroups === undefined ? undefined : ((value.itemTagCatGroups as Array<any>).map(CatGroupToJSON)),
        'currency': value.currency,
        'payAccounts': value.payAccounts === undefined ? undefined : ((value.payAccounts as Array<any>).map(PaymentAccountToJSON)),
    };
}

